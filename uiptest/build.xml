<project name="uiptest15" default="dist" basedir=".">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />
    <!-- Testing cpptasks <taskdef resource="cpptasks.tasks"/> -->

    <!-- set global properties for this build -->
    <property name="dir.src"          location="src" />
    <property name="dir.lib"          location="lib" />
    <property name="dir.build"        location="build" />
    <property name="dir.dist"         location="dist" />
    <property name="srclist.cpp"      value="?????.cpp" />

  <!-- <property file="${ant.project.name}.properties" /> -->
  <property name="dir.arduinolib"   location="${basedir}/../Arduinolib" />
  <property file="${dir.arduinolib}/src/Arduinolib.properties" />


    <target name="init" depends="clean">
        <tstamp />
        <mkdir dir="${dir.build}" />
    </target>

<!--  Testing cpptasks
    <target name="compilecpp">
        <cc outtype="executable" subsystem="console" outfile="${dir.build}/hello" objdir="${dir.build}">
           <fileset dir="${dir.src}" includes="*.c"/>
        </cc>
    </target>
-->

    <property name="include33"         location="${dir.arduinolib}/UIPEthernet/src" />
    <property name="include44"         location="${include33}/utility" />
    <property name="include_all"      value="-I${include1} -I${include2} -I${include33} -I${include44}" />

    <target name="compile" depends="init" description="compile the source ">

        <for list="${srclist.cpp}" param="srcfile"  delimiter=" ">
            <sequential>
                <echo message="compiling =@{srcfile}=   ${avrgpp} ${gppswitches}  ${include_all}  ${dir.src}/@{srcfile}  -o ${dir.src}/@{srcfile}.o" />
                <exec executable="/bin/bash">
                    <arg value="${avrgpp} ${gppswitches}  ${include_all}  ${dir.src}/@{srcfile}  -o ${dir.src}/@{srcfile}.o" />
                </exec>
            </sequential>
        </for>
    </target>


    <property name="core.ar"        location= "${dir.arduinolib}/libDuemilanoveCore.a" />
    <property name="ard.lib.ar"     location= "${dir.arduinolib}/UIPEthernet.a" />

    <property name="avrsizeoptions" value="\-\-format=avr \-\-mcu=atmega328p" />

    <target name="link" depends="compile" description="create ELF from .o's and .a's ">
        <echo message="Linking=     ${avrgcc} ${linkswitches} -o ${elf} ${obj} ${ard.lib.ar} ${core.ar} ${libaries}" />
        <exec executable="/bin/bash">
            <arg value="${avrgcc} ${linkswitches} -o ${elf} ${obj} ${ard.lib.ar} ${core.ar} ${libaries}" />
        </exec>

        <echo message="Sizing=     ${avrsize} ${avrsizeoptions} ${elf}" />
        <exec executable="/bin/bash">
            <arg value="${avrsize} ${avrsizeoptions} ${elf}" />
        </exec>
    </target>



    <target name="dist" depends="link" description="create EPP and HEX files">
        <mkdir dir="${dir.dist}" />

        <!-- create EPP -->
        <echo message="Creating EPP=     ${avrobjcopy} ${eppswitches} ${elf}  ${eppfile}" />
        <exec executable="/bin/bash">
            <arg value="${avrobjcopy} -v  ${eppswitches}  ${elf}  ${eppfile}" />
        </exec>

        <!-- create HEX -->
        <echo message="Creating HEX=     ${avrobjcopy} ${hexswitches}  ${elf}  ${hex}" />
        <exec executable="/bin/bash">
            <arg value="${avrobjcopy} -v ${hexswitches}  ${elf}  ${hex}" />
        </exec>
    </target>




    <target name="upload"  description="AVR upload to device">
        <echo message="${avrdude}  ${avrdudeswitches}" />
        <exec executable="/bin/bash">
            <arg value=" ${avrdude}  ${avrdudeswitches}" />
        </exec>
    </target>




    <target name="clean" description="clean up">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${dir.src}" includes="**/*.o"/>
            <fileset dir="${dir.src}" includes="**/*.d"/>
            <fileset dir="${dir.lib}" includes="**/*.o"/>
            <fileset dir="${dir.lib}" includes="**/*.d"/>
            <fileset dir="${dir.build}" includes="**/*"/>
            <fileset dir="${dir.dist}" includes="**/*"/>
        </delete>
    </target>


    <target name="clean-all" depends="clean" description="clean up">
        <delete file="${lib.a}" failonerror="false" />
        <delete dir="${dir.build}" />
        <delete dir="${dir.dist}" />
    </target>


    <echoproperties />

</project>