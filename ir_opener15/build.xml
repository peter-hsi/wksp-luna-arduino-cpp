<!--
TODO:    fix hardcoded filelists!!!
TODO:    add AVR tools Ant task (avr-gcc.exe, avr-gpp.exe, avrdude.exe, etc)
-->
<project name="ir_opener15" default="dist" basedir=".">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />
    <property file="${ant.project.name}.properties" />

    <!-- set global properties for this build -->
    <property name="dir.arduino.home" location="C:/arduino-1.5.8" />
    <property name="dir.src"          location="src" />
    <property name="dir.lib"          location="lib" />
    <property name="dir.arduinolib"   location="${basedir}/../Arduinolib" />
    <property name="dir.build"        location="build" />
    <property name="dir.dist"         location="dist" />

    <!-- TODO: remove hardcode -->
    <property name="srclist.cpp"      value="ir_opener15.cpp Door.cpp Passkey.cpp" />


    <target name="init" depends="clean">
        <tstamp />
        <mkdir dir="${dir.build}" />
    </target>

    
    
    
    <property name="avrgcc"           location="${dir.arduino.home}/hardware/tools/avr/bin/avr-gcc.exe" />
    <property name="avrgpp"           location="${dir.arduino.home}/hardware/tools/avr/bin/avr-g++.exe" />
    <property name="gcc_switches"     value="-c -g -Os -w -ffunction-sections -fdata-sections -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=158 -DARDUINO_AVR_DUEMILANOVE -DARDUINO_ARCH_AVR -DDB" />
    <property name="gppswitches"      value="-c -g -Os -w -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=158 -DARDUINO_AVR_DUEMILANOVE -DARDUINO_ARCH_AVR  -DDB" />

    <!-- TODO fix this shit -->
    <property name="inc1"             location="${dir.arduino.home}/hardware/arduino/avr/cores/arduino" />
    <property name="inc2"             location="${dir.arduino.home}/hardware/arduino/avr/variants/standard" />
    <property name="inc3"             location="${dir.arduinolib}/UIPEthernet/src" />
    <property name="inc4"             location="${inc3}/utility" />
    <property name="inc5"             location="${dir.arduino.home}/hardware/arduino/avr/libraries/SPI" />
    <property name="inc6"             location="${dir.arduinolib}/IRremote/src" />
    <property name="includes"         value="-I${inc1} -I${inc2} -I${inc5} -I${inc6}" />

    <target name="compile" depends="init" description="compile the source ">
        <for list="${srclist.cpp}" param="srcfile"  delimiter=" ">
            <sequential>
                <echo message="compiling =@{srcfile}=   ${avrgpp} ${gppswitches}  ${includes}  ${dir.src}/@{srcfile}  -o ${dir.src}/@{srcfile}.o" />
                <exec executable="cmd">
                    <arg value="/c ${avrgpp} ${gppswitches}  ${includes}  ${dir.src}/@{srcfile}  -o ${dir.src}/@{srcfile}.o" />
                </exec>
            </sequential>
        </for>
    </target>


    <property name="avrgcc"       location= "${dir.arduino.home}/hardware/tools/avr/bin/avr-gcc.exe" />
    <property name="linkswitches" value=    "-Os -Wl,--gc-sections -mmcu=atmega328p" />
    <property name="core.ar"      location= "C:/Users/peter/wksp-cpp-luna/libDuemilanoveCore.a" />
    <!-- TODO fix this shit -->
    <property name="ard.ar.1"   location= "${dir.arduinolib}/UIPEthernet.a" />
    <property name="ard.ar.2"   location= "${dir.arduinolib}/IRremote.a" />
    <property name="ard.ar.all" value= "${ard.ar.2} ${core.ar}" />

    <property name="obj.1"        location= "${dir.src}/${ant.project.name}.cpp.o" />
    <property name="obj.2"        location= "${dir.src}/Door.cpp.o" />
    <property name="obj.3"        location= "${dir.src}/Passkey.cpp.o" />
    <property name="obj.all"      value= "${obj.1} ${obj.2} ${obj.3}" />

    <property name="libaries"     value=    "-L${dir.arduinolib} -lm" />
    <property name="elf"          location= "${dir.build}/${ant.project.name}.cpp.elf" />

    <property name="avrsize" location="${dir.arduino.home}/hardware/tools/avr/bin/avr-size.exe" />
    <property name="avrsizeoptions" value="--format=avr --mcu=atmega328p" />

    <target name="link" depends="compile" description="create ELF from .o's and .a's ">
        <echo message="Linking=     ${avrgcc} ${linkswitches} -o ${elf} ${obj.all} ${ard.ar.all} ${libaries}" />
        <exec executable="cmd">
            <arg value="/c ${avrgcc} ${linkswitches} -o ${elf} ${obj.all} ${ard.ar.all} ${libaries}" />
        </exec>

        <echo message="Sizing=     ${avrsize} ${avrsizeoptions} ${elf}" />
        <exec executable="cmd">
            <arg value="/c ${avrsize} ${avrsizeoptions} ${elf}" />
        </exec>
    </target>


    
    <property name="avrobjcopy"   location= "${dir.arduino.home}/hardware/tools/avr/bin/avr-objcopy.exe" />
    <property name="eppswitches"  value=    "-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" />
    <property name="hexswitches"  value=    "-O ihex -R .eeprom" />

    <property name="eppfile"  location= "${dir.dist}/${ant.project.name}.cpp.eep" />
    <property name="hex"      location= "${dir.dist}/${ant.project.name}.cpp.hex" />

    <target name="dist" depends="link" description="create EPP and HEX files">
        <mkdir dir="${dir.dist}" />

        <!-- create EPP -->
        <echo message="Creating EPP=     ${avrobjcopy} ${eppswitches} ${elf}  ${eppfile}" />
        <exec executable="cmd">
            <arg value="/c ${avrobjcopy} -v  ${eppswitches}  ${elf}  ${eppfile}" />
        </exec>

        <!-- create HEX -->
        <echo message="Creating HEX=     ${avrobjcopy} ${hexswitches}  ${elf}  ${hex}" />
        <exec executable="cmd">
            <arg value="/c ${avrobjcopy} -v ${hexswitches}  ${elf}  ${hex}" />
        </exec>
    </target>



    <property name="avrdude"          location= "${dir.arduino.home}/hardware/tools/avr/bin/avrdude.exe" />
    <property name="avrdudeconf"      location= "${dir.arduino.home}/hardware/tools/avr/etc/avrdude.conf " />
    <property name="comport"          value=    "-PCOM17 -b57600" />
    <property name="avrdudeswitches"  value=    "-C${avrdudeconf} -v -v -v -v -patmega328p -carduino ${comport} -D -Uflash:w:${hex}:i" />
    <property name="putty"            location="C:\portable\putty\PUTTY.EXE" />

    <target name="upload"  description="AVR upload to device">
        <echo message="${avrdude}  ${avrdudeswitches}" />
        <echo message="${putty} -load serialcom17" />
        <!-- <exec executable="cmd">
            <arg value="/c  ${avrdude}  ${avrdudeswitches}" />
        </exec> -->
    </target>

<!--
IDE
Build options changed, rebuilding all

Sketch uses 450 bytes (1%) of program storage space. Maximum is 30,720 bytes.
Global variables use 9 bytes (0%) of dynamic memory, leaving 2,039 bytes for local variables. Maximum is 2,048 bytes.
C:\arduino-1.5.8/hardware/tools/avr/bin/avrdude 
-CC:\arduino-1.5.8/hardware/tools/avr/etc/avrdude.conf 
-v -v -v -v 
-patmega328p -carduino 
-PCOM17 -b57600 
-D -Uflash:w:C:\Users\peter\AppData\Local\Temp\build1501707164849072863.tmp/sketch_oct30a.cpp.hex:i 

avrdude: Version 6.0.1, compiled on Apr  3 2014 at 23:12:16
         Copyright (c) 2000-2005 Brian Dean, http://www.bdmicro.com/



Eclipse
C:\arduino-1.5.8\hardware\tools\avr\bin\avrdude.exe  -CC:\arduino-1.5.8\hardware\tools\avr\etc\avrdude.conf -v -v -v -v -patmega328p -carduino -PCOM17 -b57600 -D -Uflash:w:C:\Users\peter\wksp-cpp-luna\ir_opener15\dist\ir_opener15.cpp.hex:i


Putty
C:\portable\putty\PUTTY.EXE -load "serialcom17"

-->


    <target name="clean" description="clean up">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${dir.src}" includes="**/*.o"/>
            <fileset dir="${dir.src}" includes="**/*.d"/>
            <fileset dir="${dir.lib}" includes="**/*.o"/>
            <fileset dir="${dir.lib}" includes="**/*.d"/>
            <fileset dir="${dir.build}" includes="**/*"/>
            <fileset dir="${dir.dist}" includes="**/*"/>
        </delete>
    </target>


    <target name="clean-all" depends="clean" description="clean up">
        <delete file="${lib.a}" failonerror="false" />
        <delete dir="${dir.build}" />
        <delete dir="${dir.dist}" />
    </target>


    <echoproperties />

</project>