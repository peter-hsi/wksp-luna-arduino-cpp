<!--
TODO: fix hardcoded file lists
-->
<project name="Receive_Blocking" default="dist" basedir=".">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />
    <property file="../Arduinolib/Arduinolib.properties" />

    <!-- set global properties for this build -->
    <property name="dir.arduino.home" location="C:/arduino-1.0.6" />
    <property name="dir.src"          location="src" />
    <property name="dir.lib"          location="lib" />
    <property name="dir.arduinolib"   location="${basedir}/../Arduinolib/lib" />
    <property name="dir.build"        location="build" />
    <property name="dir.dist"         location="dist" />

    <!-- TODO: remove hardcode -->
    <property name="list.ardlib.c"    value="" />
    <property name="list.ardlib.cpp"  value="${ant.project.name}.cpp" />



    <target name="init" depends="clean">
        <tstamp />
        <mkdir dir="${dir.build}" />
    </target>


    <property name="avrgcc"           location="${dir.arduino.home}/hardware/tools/avr/bin/avr-gcc.exe" />
    <property name="avrgpp"           location="${dir.arduino.home}/hardware/tools/avr/bin/avr-g++.exe" />
    <property name="gcc_switches"     value="-c -g -Os -w -ffunction-sections -fdata-sections -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=${arduino.ide} -DARDUINO_AVR_DUEMILANOVE -DARDUINO_ARCH_AVR" />
    <property name="gppswitches"      value="-c -g -Os -w -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=${arduino.ide} -DARDUINO_AVR_DUEMILANOVE -DARDUINO_ARCH_AVR" />

    <property name="inc1"             location="${dir.arduino.home}/hardware/arduino/cores/arduino" />
    <property name="inc2"             location="${dir.arduino.home}/hardware/arduino/variants/standard" />
    <property name="inc3"             location="${dir.arduino.home}/hardware/tools/avr/avr/include" />
    <property name="inc4"             location="${dir.arduinolib}/../IRLremote/src" />
    <property name="includes"         value=   "-I${dir.src} -I${inc1} -I${inc2} -I${inc3} -I${inc4}" />

    <target name="compile" depends="init" description="compile the source ">
        <for list="${list.ardlib.cpp}" param="sf"  delimiter=" ">
            <sequential>
                <echo message="compiling =@{sf}=   ${avrgpp} ${gppswitches}  ${includes}  ${dir.src}/@{sf}  -o ${dir.src}/@{sf}.o" />
                <exec executable="cmd">
                    <arg value="/c ${avrgpp} ${gppswitches}  ${includes}  ${dir.src}/@{sf}  -o ${dir.src}/@{sf}.o" />
                </exec>
            </sequential>
        </for>
    </target>


    <property name="avrgcc"       location  ="${dir.arduino.home}/hardware/tools/avr/bin/avr-gcc.exe" />
    <property name="linkswitches" value     ="-Os -Wl,--gc-sections -mmcu=atmega328p" />
    <property name="core.ar"      location  ="${dir.arduinolib}/libDuemilanoveCore106.a" />
    <property name="ard.lib.ar"   location  ="${dir.arduinolib}/IRLremote.a" />

    <property name="obj"          location  ="${dir.src}/${ant.project.name}.cpp.o" />
    <property name="libaries"     value     ="-L${dir.arduinolib} -lm" />
    <property name="elf"          location  ="${dir.build}/${ant.project.name}.cpp.elf" />

    <property name="avrsize"        location="${dir.arduino.home}/hardware/tools/avr/bin/avr-size.exe" />
    <property name="avrsizeoptions" value   ="--format=avr --mcu=atmega328p" />

    <target name="link" depends="compile" description="create ELF from .o's and .a's ">
        <echo message="Linking=     ${avrgcc} ${linkswitches} -o ${elf} ${obj} ${ard.lib.ar} ${core.ar} ${libaries}" />
        <exec executable="cmd">
            <arg value="/c ${avrgcc} ${linkswitches} -o ${elf} ${obj} ${ard.lib.ar} ${core.ar} ${libaries}" />
        </exec>

        <echo message="Sizing=     ${avrsize} ${avrsizeoptions} ${elf}" />
        <exec executable="cmd">
            <arg value="/c ${avrsize} ${avrsizeoptions} ${elf}" />
        </exec>
    </target>



    <property name="avrobjcopy"   location= "${dir.arduino.home}/hardware/tools/avr/bin/avr-objcopy.exe" />
    <property name="eppswitches"  value=    "-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" />
    <property name="hexswitches"  value=    "-O ihex -R .eeprom" />

    <property name="eppfile"  location= "${dir.dist}/${ant.project.name}.cpp.eep" />
    <property name="hex"      location= "${dir.dist}/${ant.project.name}.cpp.hex" />

    <target name="dist" depends="link" description="create EPP and HEX files">
        <mkdir dir="${dir.dist}" />

        <!-- create EPP -->
        <echo message="Creating EPP=     ${avrobjcopy} ${eppswitches} ${elf}  ${eppfile}" />
        <exec executable="cmd">
            <arg value="/c ${avrobjcopy} -v  ${eppswitches}  ${elf}  ${eppfile}" />
        </exec>

        <!-- create HEX -->
        <echo message="Creating HEX=     ${avrobjcopy} ${hexswitches}  ${elf}  ${hex}" />
        <exec executable="cmd">
            <arg value="/c ${avrobjcopy} -v ${hexswitches}  ${elf}  ${hex}" />
        </exec>
    </target>



    <property name="avr.dude"          location= "${dir.arduino.home}/hardware/tools/avr/bin/avrdude.exe" />
    <property name="avr.dudeconf"      value=    "-C${dir.arduino.home}/hardware/tools/avr/etc/avrdude.conf " />
    <property name="avr.comport"       value=    "-P\\.\COM4 -b57600" />
    <property name="avr.partno"        value=    "-patmega328p" />
    <property name="avr.programmer"    value=    "-carduino" />
    <property name="avr.dudeswitches"  value=    "${avr.dudeconf} -v -v -v -v ${avr.partno} ${avr.programmer} ${avr.comport} -D -Uflash:w:${hex}:i" />

    <target name="upload"  description="AVR upload to device">
        <echo message="${avr.dude}  ${avr.dudeswitches}" />
        <exec executable="cmd">
            <arg value="/c  ${avr.dude}  ${avr.dudeswitches}" />
        </exec>
    </target>




    <target name="clean" description="clean up">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${dir.src}" includes="**/*.o"/>
            <fileset dir="${dir.src}" includes="**/*.d"/>
            <fileset dir="${dir.lib}" includes="**/*.o"/>
            <fileset dir="${dir.lib}" includes="**/*.d"/>
            <fileset dir="${dir.build}" includes="**/*"/>
            <fileset dir="${dir.dist}" includes="**/*"/>
        </delete>
    </target>


    <target name="clean-all" depends="clean" description="clean up">
        <delete file="${lib.a}" failonerror="false" />
        <delete dir="${dir.build}" />
        <delete dir="${dir.dist}" />
    </target>


    <echoproperties />

</project>